Index: .idea/jpa-buddy.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jpa-buddy.xml b/.idea/jpa-buddy.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jpa-buddy.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JpaBuddyIdeaProjectConfig">
+    <option name="renamerInitialized" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/Car.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/Car.java b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/Car.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/Car.java	
@@ -0,0 +1,56 @@
+package org.example.domain;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+
+@Component
+public class Car {
+
+    private String model = "BMW";
+    private String made = "X1";
+
+    @Autowired
+    private iEngin carEngin;
+
+    public Car(iEngin engin ) {
+        this.carEngin = engin;
+        System.out.println("Автомобиль создан!");
+    }
+
+    public iEngin getCarEngin() {
+        return carEngin;
+    }
+
+    public void setCarEngin(iEngin carEngin) {
+        this.carEngin = carEngin;
+    }
+
+    public String getModel() {
+        return model;
+    }
+
+    public void setModel(String model) {
+        this.model = model;
+    }
+
+    public String getMade() {
+        return made;
+    }
+
+    public void setMade(String made) {
+        this.made = made;
+    }
+
+    @Override
+    public String toString() {
+        return "Car{" +
+                "model='" + model + '\'' +
+                ", made='" + made + '\'' +
+                '}';
+    }
+
+    public void go()
+    {
+        carEngin.startEngine();
+    }
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/DiselEngin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/DiselEngin.java b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/DiselEngin.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/DiselEngin.java	
@@ -0,0 +1,18 @@
+package org.example.domain;
+
+import org.springframework.context.annotation.Lazy;
+import org.springframework.context.annotation.Primary;
+import org.springframework.stereotype.Component;
+
+@Component
+@Lazy
+public class DiselEngin  {
+    public DiselEngin() {
+        System.out.println("Создан экземпляр DiselEngin");
+    }
+
+    // @Override
+    public void startEngine() {
+        System.out.println("Запущен Дизел 65р.л");
+    }
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/config/ProjectConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/config/ProjectConfig.java b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/config/ProjectConfig.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/config/ProjectConfig.java	
@@ -0,0 +1,15 @@
+package org.example.config;
+
+import org.example.domain.Car;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Primary;
+
+@Configuration
+@ComponentScan(basePackages = "org.example.domain")
+public class ProjectConfig {
+
+
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/Main.java b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/Main.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/Main.java	
@@ -0,0 +1,17 @@
+package org.example;
+
+import org.example.config.ProjectConfig;
+import org.example.domain.Car;
+import org.example.domain.DiselEngin;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+public class Main {
+    public static void main(String[] args) {
+        var context = new AnnotationConfigApplicationContext(ProjectConfig.class);
+       // System.out.println("Hello world!");
+        Car p = context.getBean(Car.class);
+        p.go();
+        System.out.println("----------------------");
+        DiselEngin dEng = context.getBean(DiselEngin.class);
+    }
+}
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/encodings.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/.gitignore b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/.gitignore	
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/misc.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.idea/misc.xml	
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="18" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/GasolinEngin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/GasolinEngin.java b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/GasolinEngin.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/GasolinEngin.java	
@@ -0,0 +1,15 @@
+package org.example.domain;
+
+import org.springframework.stereotype.Component;
+
+@Component
+public class GasolinEngin implements iEngin {
+    public GasolinEngin() {
+        System.out.println("Создан экземпляр GasolinEngin");
+    }
+
+    @Override
+    public void startEngine() {
+        System.out.println("Запущен Бензин 44р.л");
+    }
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/iEngin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/iEngin.java b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/iEngin.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/src/main/java/org/example/domain/iEngin.java	
@@ -0,0 +1,5 @@
+package org.example.domain;
+
+public interface iEngin {
+    public  void startEngine();
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/pom.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/pom.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/pom.xml	
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>Exam2Sem2</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>15</maven.compiler.source>
+        <maven.compiler.target>15</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context</artifactId>
+            <version>5.3.8</version>
+        </dependency>
+        <dependency>
+            <groupId>org.example</groupId>
+            <artifactId>CourseSpringBoot</artifactId>
+            <version>1.0-SNAPSHOT</version>
+            <scope>compile</scope>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/Main.java b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/Main.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/Main.java	
@@ -0,0 +1,19 @@
+package org.example;
+
+import org.example.services.CommentService;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+public class Main {
+    public static void main(String[] args) {
+        var c = new AnnotationConfigApplicationContext(seminar_2.seminar_2_1.config.Exam4Sem2.src.main.java.org.example.config.ProjectConfig.class);
+
+        var cs1 = c.getBean("commentService", CommentService.class);
+        var cs2 = c.getBean("commentService", CommentService.class);
+        // System.out.println("Hello world!");
+
+        boolean b1 = cs1 == cs2;
+        System.out.println(b1);
+        System.out.println(cs1);
+        System.out.println(cs2);
+    }
+}
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.gitignore b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.gitignore
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.gitignore	
@@ -0,0 +1,38 @@
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### IntelliJ IDEA ###
+.idea/modules.xml
+.idea/jarRepositories.xml
+.idea/compiler.xml
+.idea/libraries/
+*.iws
+*.iml
+*.ipr
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/encodings.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/.gitignore b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/.gitignore	
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.gitignore b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.gitignore
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.gitignore	
@@ -0,0 +1,38 @@
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### IntelliJ IDEA ###
+.idea/modules.xml
+.idea/jarRepositories.xml
+.idea/compiler.xml
+.idea/libraries/
+*.iws
+*.iml
+*.ipr
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/misc.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/.idea/misc.xml	
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="18" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/services/CommentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/services/CommentService.java b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/services/CommentService.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/services/CommentService.java	
@@ -0,0 +1,7 @@
+package org.example.services;
+
+public class CommentService {
+    public CommentService() {
+        System.out.println("Создан CommentService!");
+    }
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/config/ProjectConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/config/ProjectConfig.java b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/config/ProjectConfig.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/src/main/java/org/example/config/ProjectConfig.java	
@@ -0,0 +1,18 @@
+package seminar_2.seminar_2_1.config.Exam4Sem2.src.main.java.org.example.config;
+
+import org.example.services.CommentService;
+import org.springframework.beans.factory.config.BeanDefinition;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Scope;
+
+@Configuration
+public class ProjectConfig {
+
+    @Bean
+    @Scope(BeanDefinition.SCOPE_PROTOTYPE)
+    public CommentService commentService() {
+        return new CommentService();
+    }
+
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/pom.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/pom.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam4Sem2/pom.xml	
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>Exam4Sem2</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>15</maven.compiler.source>
+        <maven.compiler.target>15</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context</artifactId>
+            <version>5.3.8</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-test</artifactId>
+            <version>5.3.8</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter-engine</artifactId>
+            <version>5.6.2</version>
+            <scope>test</scope>
+        </dependency>
+
+    </dependencies>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/pom.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/pom.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/pom.xml	
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>Exam3Sem2</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>15</maven.compiler.source>
+        <maven.compiler.target>15</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context</artifactId>
+            <version>5.3.8</version>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/misc.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/misc.xml	
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="18" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Car.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Car.java b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Car.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Car.java	
@@ -0,0 +1,53 @@
+package org.example.domain;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+
+
+@Component
+public class Car {
+
+    private String model = "BMW";
+    private String made = "X1";
+
+    @Autowired
+    private Engin carEngin;
+
+    public Car(Engin engin ) {
+        this.carEngin = engin;
+        System.out.println("Автомобиль создан!");
+    }
+
+    public Engin getCarEngin() {
+        return carEngin;
+    }
+
+    public void setCarEngin(Engin carEngin) {
+        this.carEngin = carEngin;
+    }
+
+    public String getModel() {
+        return model;
+    }
+
+    public void setModel(String model) {
+        this.model = model;
+    }
+
+    public String getMade() {
+        return made;
+    }
+
+    public void setMade(String made) {
+        this.made = made;
+    }
+
+    @Override
+    public String toString() {
+        return "Car{" +
+                "model='" + model + '\'' +
+                ", made='" + made + '\'' +
+                ", carEngin=" + carEngin +
+                '}';
+    }
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Engin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Engin.java b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Engin.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/domain/Engin.java	
@@ -0,0 +1,27 @@
+package org.example.domain;
+
+import org.springframework.stereotype.Component;
+
+@Component
+public class Engin {
+    private String typeEngin = "Бензиновый";
+
+    public Engin() {
+        System.out.println("Двигатель создан!");
+    }
+
+    public String getTypeEngin() {
+        return typeEngin;
+    }
+
+    public void setTypeEngin(String typeEngin) {
+        this.typeEngin = typeEngin;
+    }
+
+    @Override
+    public String toString() {
+        return "Engin{" +
+                "typeEngin='" + typeEngin + '\'' +
+                '}';
+    }
+}
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/config/ProjectConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/config/ProjectConfig.java b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/config/ProjectConfig.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/config/ProjectConfig.java	
@@ -0,0 +1,74 @@
+package org.example.config;
+
+
+import org.example.domain.Car;
+import org.example.domain.Engin;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Primary;
+
+
+@Configuration
+@ComponentScan("org.example.domain")
+public class ProjectConfig {
+    @Bean
+    Car car(Engin eng)
+    {
+        Car obCar = new Car(eng);
+        obCar.setModel("S8");
+        obCar.setMade("Audi");
+        return obCar;
+    }
+
+    @Bean
+    Car car2(Engin eng)
+    {
+        Car obCar = new Car(eng);
+        obCar.setModel("S8");
+        obCar.setMade("Audi");
+        return obCar;
+    }
+
+
+//    @Bean
+//    Engin engin1()
+//    {
+//        Engin eng = new Engin();
+//        eng.setTypeEngin("Бензиновый");
+//        return eng;
+//    }
+//
+//    @Bean
+//    Engin engin2()
+//    {
+//        Engin eng = new Engin();
+//        eng.setTypeEngin("Дизельный");
+//        return eng;
+//    }
+//
+//
+//    @Bean
+//    @Primary
+//    org.example.domain.Car car(@Qualifier("engin2") Engin eng)
+//    {
+//        org.example.domain.Car obCar = new org.example.domain.Car(eng);
+//        //obCar.setCarEngin(engin());
+//        obCar.setModel("S8");
+//        obCar.setMade("Audi");
+//        return obCar;
+//    }
+//
+//    @Bean
+//    Car car2(@Qualifier("engin1") Engin eng)
+//    {
+//        Car obCar = new Car(eng);
+//        //obCar.setCarEngin(engin());
+//        obCar.setModel("S8");
+//        obCar.setMade("Audi");
+//        return obCar;
+//    }
+//
+
+}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/uiDesigner.xml	
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/Main.java b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/Main.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/src/main/java/org/example/Main.java	
@@ -0,0 +1,20 @@
+package org.example;
+
+
+import org.example.domain.Car;
+import org.example.domain.Engin;
+import org.springframework.context.annotation.AnnotationConfigApplicationContext;
+
+
+public class Main {
+    public static void main(String[] args) {
+       // System.out.println("Hello world!");
+        var context = new AnnotationConfigApplicationContext(ProcessBuilder.class);
+
+        Car c = context.getBean(Car.class);
+        Engin e = context.getBean(Engin.class);
+
+        System.out.println(c);
+        System.out.println(e);
+    }
+}
\ No newline at end of file
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/dataSources.xml	
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="@localhost" uuid="92969962-e10d-40b0-9645-6e3bae9acd3a">
+      <driver-ref>mysql.8</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>
+      <jdbc-url>jdbc:mysql://localhost:3306</jdbc-url>
+      <jdbc-additional-properties>
+        <property name="com.intellij.clouds.kubernetes.db.host.port" />
+        <property name="com.intellij.clouds.kubernetes.db.enabled" value="false" />
+        <property name="com.intellij.clouds.kubernetes.db.resource.type" value="Deployment" />
+        <property name="com.intellij.clouds.kubernetes.db.container.port" />
+      </jdbc-additional-properties>
+      <working-dir>$ProjectFileDir$</working-dir>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/encodings.xml b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/.gitignore b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam2Sem2/.idea/.gitignore	
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.gitignore b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.gitignore
new file mode 100644
--- /dev/null	
+++ b/src/main/java/seminar_2/seminar_2_1/config/Exam3Sem2/.gitignore	
@@ -0,0 +1,38 @@
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### IntelliJ IDEA ###
+.idea/modules.xml
+.idea/jarRepositories.xml
+.idea/compiler.xml
+.idea/libraries/
+*.iws
+*.iml
+*.ipr
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
